// Generated by Dagger (https://dagger.dev).
package com.littlegig.app.presentation.account;

import com.littlegig.app.data.repository.AuthRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AccountViewModel_Factory implements Factory<AccountViewModel> {
  private final Provider<AuthRepository> authRepositoryProvider;

  public AccountViewModel_Factory(Provider<AuthRepository> authRepositoryProvider) {
    this.authRepositoryProvider = authRepositoryProvider;
  }

  @Override
  public AccountViewModel get() {
    return newInstance(authRepositoryProvider.get());
  }

  public static AccountViewModel_Factory create(Provider<AuthRepository> authRepositoryProvider) {
    return new AccountViewModel_Factory(authRepositoryProvider);
  }

  public static AccountViewModel newInstance(AuthRepository authRepository) {
    return new AccountViewModel(authRepository);
  }
}
