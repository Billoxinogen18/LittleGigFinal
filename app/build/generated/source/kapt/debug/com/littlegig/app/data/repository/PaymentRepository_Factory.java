// Generated by Dagger (https://dagger.dev).
package com.littlegig.app.data.repository;

import com.google.firebase.firestore.FirebaseFirestore;
import com.littlegig.app.services.FlutterwavePaymentService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class PaymentRepository_Factory implements Factory<PaymentRepository> {
  private final Provider<FirebaseFirestore> firestoreProvider;

  private final Provider<FlutterwavePaymentService> flutterwaveServiceProvider;

  public PaymentRepository_Factory(Provider<FirebaseFirestore> firestoreProvider,
      Provider<FlutterwavePaymentService> flutterwaveServiceProvider) {
    this.firestoreProvider = firestoreProvider;
    this.flutterwaveServiceProvider = flutterwaveServiceProvider;
  }

  @Override
  public PaymentRepository get() {
    return newInstance(firestoreProvider.get(), flutterwaveServiceProvider.get());
  }

  public static PaymentRepository_Factory create(Provider<FirebaseFirestore> firestoreProvider,
      Provider<FlutterwavePaymentService> flutterwaveServiceProvider) {
    return new PaymentRepository_Factory(firestoreProvider, flutterwaveServiceProvider);
  }

  public static PaymentRepository newInstance(FirebaseFirestore firestore,
      FlutterwavePaymentService flutterwaveService) {
    return new PaymentRepository(firestore, flutterwaveService);
  }
}
