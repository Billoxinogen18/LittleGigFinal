// Generated by Dagger (https://dagger.dev).
package com.littlegig.app.presentation.tickets;

import com.littlegig.app.data.repository.AuthRepository;
import com.littlegig.app.data.repository.TicketRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class TicketsViewModel_Factory implements Factory<TicketsViewModel> {
  private final Provider<TicketRepository> ticketRepositoryProvider;

  private final Provider<AuthRepository> authRepositoryProvider;

  public TicketsViewModel_Factory(Provider<TicketRepository> ticketRepositoryProvider,
      Provider<AuthRepository> authRepositoryProvider) {
    this.ticketRepositoryProvider = ticketRepositoryProvider;
    this.authRepositoryProvider = authRepositoryProvider;
  }

  @Override
  public TicketsViewModel get() {
    return newInstance(ticketRepositoryProvider.get(), authRepositoryProvider.get());
  }

  public static TicketsViewModel_Factory create(Provider<TicketRepository> ticketRepositoryProvider,
      Provider<AuthRepository> authRepositoryProvider) {
    return new TicketsViewModel_Factory(ticketRepositoryProvider, authRepositoryProvider);
  }

  public static TicketsViewModel newInstance(TicketRepository ticketRepository,
      AuthRepository authRepository) {
    return new TicketsViewModel(ticketRepository, authRepository);
  }
}
